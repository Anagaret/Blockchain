post => ip/user (pseudo, email, tel, nom, prenom, paypal)
    - hash le mot de passe sha256

delete => ip/user/{id_user}
    - suppression du compte

post => ip/login (email, mot de passe) 
    - on check si email existe 
    - on hash le mot de passe on vient tester avec le hash en bd de
    - renvoie un token 
o
post => ip/artwork (price, file)
    - check typemime si bien uen image 
    - on sauvegarde dans notre dossier picture
    - on vient creer la ligen en bd avec available à 1
    - on vient creer sa blockchain
        -> pour avoir (l'index, previous_hash)  il faut checker si il existe une blockchain , ou recuperer le plus grand index dans la bd pour l'incrementer
        (index, previous hash , hash , nnce, timestamp, id_user_artwork, id_user_owner)
    - renvoyer la ligne artwork 

get =>artwork/{id_artwork}
    - retour la ligne artwork(availbale, price, filename) , et son createur , et son pocesseur 

get =>artwork
     retour un tableau de ligne artwork(availbale, price, filename) , et son createur , et son pocesseur 
    
get =>user/{id_user_creator}/artwork
     retour un tableau de ligne artwork(availbale, price, filename) , et son createur , et son pocesseur 


get =>user/{id_user_owner}/block
    - retourne la liste des block par rapport au id_user_owner si et seulement si l'utilisateur connecté est bien le meme que id_user_owner

get =>user/{id_user_owner}/block/{id_block}
    - retourne le block par rapport au id_user_owner si et seulement si l'utilisateur connecté est bien le meme que id_user_owner


get =>creator/
    - retourne la liste des createur 


put =>artwork/{id_artwork} -> l'achat d'une oeuvre (id_user)
    - passe la dispo à 0
    - changer le id_user_owner dans la table block 


